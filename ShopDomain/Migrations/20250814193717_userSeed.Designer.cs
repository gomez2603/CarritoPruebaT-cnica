// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDomain;

#nullable disable

namespace ShopDomain.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250814193717_userSeed")]
    partial class userSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("StoreId");

                    b.ToTable("artTiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("ShopDomain.Entities.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av Candiles 315 169",
                            LastName = "Admin",
                            Name = "Super",
                            PasswordHash = new byte[] { 51, 36, 204, 228, 40, 69, 93, 143, 58, 104, 134, 245, 1, 199, 26, 71, 88, 163, 182, 59, 151, 34, 246, 66, 115, 11, 230, 224, 212, 249, 85, 114, 189, 4, 122, 86, 239, 164, 71, 87, 165, 103, 46, 172, 194, 179, 70, 3, 249, 226, 172, 116, 50, 61, 59, 141, 187, 148, 202, 198, 135, 37, 194, 13 },
                            PasswordSalt = new byte[] { 86, 19, 165, 54, 220, 30, 66, 210, 178, 255, 3, 135, 218, 228, 118, 124, 161, 227, 66, 78, 246, 209, 137, 143, 131, 165, 59, 223, 66, 14, 248, 195, 84, 108, 75, 30, 246, 218, 192, 233, 255, 151, 42, 82, 146, 112, 109, 114, 76, 141, 201, 33, 218, 174, 62, 206, 231, 128, 193, 178, 13, 213, 29, 171, 190, 249, 2, 13, 114, 194, 93, 134, 1, 173, 117, 186, 183, 181, 58, 82, 153, 94, 142, 44, 44, 71, 54, 21, 71, 59, 63, 135, 29, 84, 197, 243, 251, 221, 31, 15, 158, 11, 21, 51, 134, 195, 157, 22, 182, 88, 11, 162, 241, 218, 121, 224, 162, 41, 212, 160, 50, 163, 69, 168, 231, 240, 167, 177 },
                            Rol = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("clienteId");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Tiendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Tiendas", "Tiendas")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Clientes", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
