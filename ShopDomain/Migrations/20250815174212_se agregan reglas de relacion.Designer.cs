// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDomain;

#nullable disable

namespace ShopDomain.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250815174212_se agregan reglas de relacion")]
    partial class seagreganreglasderelacion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("StoreId", "ArticuloId")
                        .IsUnique();

                    b.ToTable("artTiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("ShopDomain.Entities.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av Candiles 315 169",
                            LastName = "Admin",
                            Name = "Super",
                            PasswordHash = new byte[] { 187, 6, 14, 251, 110, 7, 182, 175, 180, 87, 44, 68, 96, 223, 244, 229, 245, 58, 109, 239, 221, 241, 154, 49, 233, 102, 247, 224, 16, 139, 18, 118, 233, 195, 142, 153, 53, 238, 188, 60, 79, 135, 103, 123, 177, 113, 164, 20, 52, 194, 119, 116, 173, 67, 247, 207, 145, 70, 11, 4, 212, 55, 213, 221 },
                            PasswordSalt = new byte[] { 220, 180, 129, 85, 230, 89, 206, 45, 4, 157, 11, 90, 199, 17, 77, 38, 186, 90, 12, 194, 146, 136, 52, 45, 181, 251, 122, 124, 61, 139, 110, 251, 10, 107, 171, 209, 176, 77, 146, 218, 213, 210, 128, 47, 90, 225, 203, 33, 40, 230, 130, 4, 60, 251, 25, 248, 151, 242, 188, 163, 18, 180, 91, 34, 240, 112, 251, 216, 247, 170, 175, 101, 159, 15, 153, 72, 81, 165, 237, 16, 41, 166, 165, 6, 173, 0, 130, 72, 44, 163, 43, 111, 255, 127, 185, 255, 106, 220, 45, 86, 51, 212, 104, 153, 193, 162, 146, 221, 250, 165, 138, 255, 14, 101, 18, 195, 130, 237, 228, 242, 31, 24, 226, 39, 10, 113, 33, 109 },
                            Rol = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ClientId", "ArticuloId")
                        .IsUnique();

                    b.ToTable("sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Tiendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany("ArtTienda")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Tiendas", "Tiendas")
                        .WithMany("ArtTienda")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany("Sales")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Clientes", "Cliente")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopDomain.Entities.Articulo", b =>
                {
                    b.Navigation("ArtTienda");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Clientes", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Tiendas", b =>
                {
                    b.Navigation("ArtTienda");
                });
#pragma warning restore 612, 618
        }
    }
}
