// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDomain;

#nullable disable

namespace ShopDomain.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250815212514_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("StoreId", "ArticuloId")
                        .IsUnique();

                    b.ToTable("artTiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("ShopDomain.Entities.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av Candiles 315 169",
                            LastName = "Admin",
                            Name = "Super",
                            PasswordHash = new byte[] { 169, 223, 84, 87, 194, 84, 41, 250, 121, 102, 171, 14, 77, 9, 223, 15, 174, 212, 80, 71, 12, 61, 203, 85, 231, 167, 185, 207, 2, 113, 147, 180, 255, 238, 61, 111, 11, 74, 139, 133, 43, 241, 7, 249, 182, 131, 196, 96, 5, 78, 37, 90, 73, 160, 114, 188, 97, 8, 206, 226, 152, 98, 34, 65 },
                            PasswordSalt = new byte[] { 252, 60, 212, 136, 103, 33, 226, 206, 166, 38, 227, 217, 254, 211, 195, 70, 101, 87, 20, 11, 3, 244, 1, 210, 170, 29, 223, 109, 139, 169, 90, 165, 127, 72, 98, 128, 24, 60, 171, 184, 214, 234, 211, 61, 86, 103, 242, 100, 167, 18, 119, 86, 181, 70, 141, 60, 235, 255, 144, 153, 211, 254, 185, 244, 55, 156, 138, 77, 37, 132, 173, 92, 129, 186, 185, 25, 70, 72, 219, 27, 238, 180, 225, 106, 87, 115, 32, 160, 247, 134, 131, 164, 171, 151, 190, 12, 175, 204, 122, 121, 32, 33, 121, 133, 238, 133, 152, 133, 120, 193, 239, 112, 194, 152, 196, 214, 206, 172, 225, 165, 7, 104, 26, 17, 209, 201, 212, 33 },
                            Rol = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ClientId");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Tiendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.ArtTienda", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany("ArtTienda")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Tiendas", "Tiendas")
                        .WithMany("ArtTienda")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("ShopDomain.Entities.Sales", b =>
                {
                    b.HasOne("ShopDomain.Entities.Articulo", "Articulo")
                        .WithMany("Sales")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Entities.Clientes", "Cliente")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopDomain.Entities.Articulo", b =>
                {
                    b.Navigation("ArtTienda");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Clientes", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ShopDomain.Entities.Tiendas", b =>
                {
                    b.Navigation("ArtTienda");
                });
#pragma warning restore 612, 618
        }
    }
}
